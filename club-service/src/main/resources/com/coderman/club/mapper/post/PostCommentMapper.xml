<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coderman.club.mapper.post.PostCommentMapper">
  <resultMap id="BaseResultMap" type="com.coderman.club.model.post.PostCommentModel">
    <id column="comment_id" jdbcType="BIGINT" property="commentId" />
    <result column="post_id" jdbcType="BIGINT" property="postId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="reply_id" jdbcType="BIGINT" property="replyId" />
    <result column="reply_count" jdbcType="INTEGER" property="replyCount" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="to_user_id" jdbcType="BIGINT" property="toUserId" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_hide" jdbcType="BIT" property="isHide" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.coderman.club.model.post.PostCommentModel">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    comment_id, post_id, parent_id, reply_id, reply_count, user_id, to_user_id, location, 
    create_time, is_hide, type
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>

  <update id="addReplyCount">
    update club_post_comment set reply_count = reply_count + #{count} where comment_id = #{commentId}
  </update>

  <!-- 获取每个根评论的最新三条子回复 -->
  <select id="getTopRepliesForComments" parameterType="java.util.List" resultType="com.coderman.club.vo.post.PostReplyVO">
    SELECT parent_id, comment_id, post_id, user_id, to_user_id, content, location, create_time, is_hide,reply_id,reply_count,avatar,nickname,to_user_avatar,to_user_nickname
    FROM (
    SELECT
    t1.comment_id,
    t1.post_id,
    t1.parent_id,
    t1.reply_id,
    t1.reply_count,
    t1.user_id,
    t1.to_user_id,
    t1.content,
    t1.location,
    t1.create_time,
    t1.is_hide,
    t2.avatar,
    t2.nickname,
    t3.avatar as to_user_avatar,
    t3.nickname as to_user_nickname,
    @row_number := IF(@parent_id = parent_id, @row_number + 1, 1) AS row_number,
    @parent_id := parent_id
    FROM club_post_comment t1
    left join club_user t2 on t1.user_id = t2.user_id
    left join club_user t3 on t1.to_user_id = t3.user_id
    CROSS JOIN (SELECT @row_number := 0, @parent_id := NULL) AS vars
    WHERE t1.parent_id IN
    <foreach item="item" index="index" collection="parentIds" open="(" separator="," close=")">
      #{item}
    </foreach>
    AND t1.is_hide = 0 AND t1.`type` in ('reply','reply_at')
    ORDER BY t1.parent_id ,
    <choose>
      <when test="orderByReplies!=null and orderByReplies.size()>0">
      FIELD(t1.comment_id ,
      <foreach collection="orderByReplies" item="item" separator=",">
        #{item}
      </foreach>
        ) DESC,
        t1.comment_id ASC
      </when>
      <otherwise>
        t1.comment_id ASC
      </otherwise>
    </choose>
    ) AS subquery
    WHERE row_number &lt;= 3
  </select>

  <select id="getPostReplyPage" resultType="com.coderman.club.vo.post.PostReplyVO">
    SELECT
    t1.comment_id,
    t1.post_id,
    t1.parent_id,
    t1.reply_id,
    t1.reply_count,
    t1.user_id,
    t1.to_user_id,
    t1.location,
    t1.create_time,
    t1.is_hide,
    t1.type,
    t1.content,
    t2.avatar,
    t2.nickname,
    t3.avatar as to_user_avatar,
    t3.nickname as to_user_nickname
    FROM club_post_comment t1
    left join club_user t2 on t1.user_id = t2.user_id
    left join club_user t3 on t1.to_user_id = t3.user_id
    WHERE
     t1.parent_id = #{commentId}
     AND t1.is_hide = 0 AND  t1.type in ('reply','reply_at')
     ORDER BY t1.comment_id ASC
  </select>

  <select id="selectNotificationCommentVos" resultType="com.coderman.club.vo.notification.NotificationCommentVO">
    SELECT
    -- 评论详情
    t1.comment_id,
    t1.content,
    t1.type,
    t1.parent_id,
    t1.reply_id,
    t1.post_id,
    -- 帖子标题
    t2.title AS post_title,
    -- 隐藏状态
    t1.is_hide AS is_hide,
    parent.is_hide AS parent_is_hide,
    reply.is_hide AS replied_is_hide,
    -- 用户昵称
    parent_user.nickname AS parent_user,
    reply_user.nickname AS replied_user,
    to_reply_user.nickname AS to_replied_user,
    `user`.avatar AS avatar,
    `user`.nickname AS `user`,
    to_user.nickname AS to_user,
    -- 父评论和被回复的评论内容
    parent.content AS parent_content,
    reply.content AS replied_content,
    reply.type AS replied_type
    FROM
    club_post_comment t1
    -- 连接帖子表
    LEFT JOIN club_post t2 ON t1.post_id = t2.post_id
    -- 连接父评论
    LEFT JOIN club_post_comment parent ON t1.parent_id = parent.comment_id AND t1.parent_id > 0
    -- 连接被回复的评论（仅针对 'reply_at' 类型）
    LEFT JOIN club_post_comment reply ON t1.type = 'reply_at' AND t1.reply_id = reply.comment_id AND t1.reply_id > 0
    -- 连接用户表
    LEFT JOIN club_user parent_user ON parent.user_id = parent_user.user_id
    LEFT JOIN club_user reply_user ON t1.type = 'reply_at' AND reply.user_id = reply_user.user_id
    LEFT JOIN club_user to_reply_user ON t1.type = 'reply_at' AND reply.to_user_id = to_reply_user.user_id
    LEFT JOIN club_user `user` ON t1.user_id = `user`.user_id
    LEFT JOIN club_user to_user ON t1.to_user_id = to_user.user_id
    WHERE
    t1.comment_id in
    <foreach collection="commentIdList" item="item" separator="," open="(" close=")">
      #{item}
    </foreach>
  </select>

  <select id="selectRootCommentVos" resultType="com.coderman.club.vo.post.PostCommentVO">
    select
    t1.comment_id,
    t1.post_id,
    t1.parent_id,
    t1.reply_id,
    t1.reply_count,
    t1.user_id,
    t1.to_user_id,
    t1.location,
    t1.create_time,
    t1.is_hide,
    t1.`type`,
    t1.content,
    t2.avatar,
    t2.nickname,
    t3.avatar as to_user_avatar,
    t3.nickname as to_user_nickname
    from club_post_comment t1
    left join club_user t2 on t1.user_id = t2.user_id
    left join club_user t3 on t1.to_user_id = t3.user_id
    where
    t1.post_id = #{dto.postId} and t1.`type` = 'comment' and t1.is_hide = 0
    order by
    <choose>
      <when test="dto.orderByComments!=null and dto.orderByComments.size()>0">
        FIELD(t1.comment_id ,
        <foreach collection="dto.orderByComments" item="item" separator=",">
          #{item}
        </foreach>
        ) desc,
        t1.create_time desc
      </when>
      <otherwise>
        t1.create_time desc
      </otherwise>
    </choose>
  </select>

</mapper>