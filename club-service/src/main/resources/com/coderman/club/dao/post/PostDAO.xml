<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coderman.club.dao.post.PostDAO">
  <resultMap id="BaseResultMap" type="com.coderman.club.model.post.PostModel">
    <id column="post_id" jdbcType="BIGINT" property="postId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="section_id" jdbcType="BIGINT" property="sectionId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="views_count" jdbcType="INTEGER" property="viewsCount" />
    <result column="likes_count" jdbcType="INTEGER" property="likesCount" />
    <result column="comments_count" jdbcType="INTEGER" property="commentsCount" />
    <result column="favorites_count" jdbcType="INTEGER" property="favoritesCount" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="last_updated_at" jdbcType="TIMESTAMP" property="lastUpdatedAt" />
    <result column="is_active" jdbcType="BIT" property="isActive" />
    <result column="is_draft" jdbcType="BIT" property="isDraft" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.coderman.club.model.post.PostModel">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    post_id, user_id, section_id, title, views_count, likes_count, comments_count, favorites_count, 
    created_at, last_updated_at, is_active, is_draft
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.coderman.club.model.post.PostExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from club_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.coderman.club.model.post.PostExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from club_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from club_post
    where post_id = #{postId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from club_post
    where post_id = #{postId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.coderman.club.model.post.PostExample">
    delete from club_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.coderman.club.model.post.PostModel">
    insert into club_post (post_id, user_id, section_id, 
      title, views_count, likes_count, 
      comments_count, favorites_count, created_at, 
      last_updated_at, is_active, is_draft, 
      content)
    values (#{postId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{sectionId,jdbcType=BIGINT}, 
      #{title,jdbcType=VARCHAR}, #{viewsCount,jdbcType=INTEGER}, #{likesCount,jdbcType=INTEGER}, 
      #{commentsCount,jdbcType=INTEGER}, #{favoritesCount,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{lastUpdatedAt,jdbcType=TIMESTAMP}, #{isActive,jdbcType=BIT}, #{isDraft,jdbcType=BIT}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.coderman.club.model.post.PostModel">
    insert into club_post
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="postId != null">
        post_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="sectionId != null">
        section_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="viewsCount != null">
        views_count,
      </if>
      <if test="likesCount != null">
        likes_count,
      </if>
      <if test="commentsCount != null">
        comments_count,
      </if>
      <if test="favoritesCount != null">
        favorites_count,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="lastUpdatedAt != null">
        last_updated_at,
      </if>
      <if test="isActive != null">
        is_active,
      </if>
      <if test="isDraft != null">
        is_draft,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="postId != null">
        #{postId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="sectionId != null">
        #{sectionId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="viewsCount != null">
        #{viewsCount,jdbcType=INTEGER},
      </if>
      <if test="likesCount != null">
        #{likesCount,jdbcType=INTEGER},
      </if>
      <if test="commentsCount != null">
        #{commentsCount,jdbcType=INTEGER},
      </if>
      <if test="favoritesCount != null">
        #{favoritesCount,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedAt != null">
        #{lastUpdatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isActive != null">
        #{isActive,jdbcType=BIT},
      </if>
      <if test="isDraft != null">
        #{isDraft,jdbcType=BIT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coderman.club.model.post.PostExample" resultType="java.lang.Long">
    select count(*) from club_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update club_post
    <set>
      <if test="record.postId != null">
        post_id = #{record.postId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.sectionId != null">
        section_id = #{record.sectionId,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.viewsCount != null">
        views_count = #{record.viewsCount,jdbcType=INTEGER},
      </if>
      <if test="record.likesCount != null">
        likes_count = #{record.likesCount,jdbcType=INTEGER},
      </if>
      <if test="record.commentsCount != null">
        comments_count = #{record.commentsCount,jdbcType=INTEGER},
      </if>
      <if test="record.favoritesCount != null">
        favorites_count = #{record.favoritesCount,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdatedAt != null">
        last_updated_at = #{record.lastUpdatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isActive != null">
        is_active = #{record.isActive,jdbcType=BIT},
      </if>
      <if test="record.isDraft != null">
        is_draft = #{record.isDraft,jdbcType=BIT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update club_post
    set post_id = #{record.postId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      section_id = #{record.sectionId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      views_count = #{record.viewsCount,jdbcType=INTEGER},
      likes_count = #{record.likesCount,jdbcType=INTEGER},
      comments_count = #{record.commentsCount,jdbcType=INTEGER},
      favorites_count = #{record.favoritesCount,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      last_updated_at = #{record.lastUpdatedAt,jdbcType=TIMESTAMP},
      is_active = #{record.isActive,jdbcType=BIT},
      is_draft = #{record.isDraft,jdbcType=BIT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update club_post
    set post_id = #{record.postId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      section_id = #{record.sectionId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      views_count = #{record.viewsCount,jdbcType=INTEGER},
      likes_count = #{record.likesCount,jdbcType=INTEGER},
      comments_count = #{record.commentsCount,jdbcType=INTEGER},
      favorites_count = #{record.favoritesCount,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      last_updated_at = #{record.lastUpdatedAt,jdbcType=TIMESTAMP},
      is_active = #{record.isActive,jdbcType=BIT},
      is_draft = #{record.isDraft,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coderman.club.model.post.PostModel">
    update club_post
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="sectionId != null">
        section_id = #{sectionId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="viewsCount != null">
        views_count = #{viewsCount,jdbcType=INTEGER},
      </if>
      <if test="likesCount != null">
        likes_count = #{likesCount,jdbcType=INTEGER},
      </if>
      <if test="commentsCount != null">
        comments_count = #{commentsCount,jdbcType=INTEGER},
      </if>
      <if test="favoritesCount != null">
        favorites_count = #{favoritesCount,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedAt != null">
        last_updated_at = #{lastUpdatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isActive != null">
        is_active = #{isActive,jdbcType=BIT},
      </if>
      <if test="isDraft != null">
        is_draft = #{isDraft,jdbcType=BIT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where post_id = #{postId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.coderman.club.model.post.PostModel">
    update club_post
    set user_id = #{userId,jdbcType=BIGINT},
      section_id = #{sectionId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      views_count = #{viewsCount,jdbcType=INTEGER},
      likes_count = #{likesCount,jdbcType=INTEGER},
      comments_count = #{commentsCount,jdbcType=INTEGER},
      favorites_count = #{favoritesCount,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      last_updated_at = #{lastUpdatedAt,jdbcType=TIMESTAMP},
      is_active = #{isActive,jdbcType=BIT},
      is_draft = #{isDraft,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR}
    where post_id = #{postId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coderman.club.model.post.PostModel">
    update club_post
    set user_id = #{userId,jdbcType=BIGINT},
      section_id = #{sectionId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      views_count = #{viewsCount,jdbcType=INTEGER},
      likes_count = #{likesCount,jdbcType=INTEGER},
      comments_count = #{commentsCount,jdbcType=INTEGER},
      favorites_count = #{favoritesCount,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      last_updated_at = #{lastUpdatedAt,jdbcType=TIMESTAMP},
      is_active = #{isActive,jdbcType=BIT},
      is_draft = #{isDraft,jdbcType=BIT}
    where post_id = #{postId,jdbcType=BIGINT}
  </update>

    <select id="countPage" resultType="long">
    select count(1)
    from club_post
    where is_active = 1
  </select>

    <select id="pageList" resultType="com.coderman.club.vo.post.PostListItemVO">
        SELECT
               t1.post_id,
               t1.user_id,
               t1.section_id,
               t1.title,
               t1.views_count,
               t1.likes_count,
               t1.comments_count,
               t1.favorites_count,
               t1.created_at,
               t1.last_updated_at,
               t2.nickname,
               t3.avatar
        FROM club_post t1
                 LEFT JOIN club_user t2 ON t1.user_id = t2.user_id
                 LEFT JOIN club_user_info t3 ON t2.user_id = t3.user_id
        WHERE t1.is_active = 1 and t1.is_draft = 0
        ORDER BY t1.created_at DESC
        limit #{offset}, #{limit}
  </select>

    <insert id="insertSelectiveReturnKey" useGeneratedKeys="true" keyProperty="postId">
        insert into club_post
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="postId != null">
                post_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="sectionId != null">
                section_id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="viewsCount != null">
                views_count,
            </if>
            <if test="likesCount != null">
                likes_count,
            </if>
            <if test="commentsCount != null">
                comments_count,
            </if>
            <if test="favoritesCount != null">
                favorites_count,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="lastUpdatedAt != null">
                last_updated_at,
            </if>
            <if test="isActive != null">
                is_active,
            </if>
            <if test="isDraft != null">
                is_draft,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="postId != null">
                #{postId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="sectionId != null">
                #{sectionId,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="viewsCount != null">
                #{viewsCount,jdbcType=INTEGER},
            </if>
            <if test="likesCount != null">
                #{likesCount,jdbcType=INTEGER},
            </if>
            <if test="commentsCount != null">
                #{commentsCount,jdbcType=INTEGER},
            </if>
            <if test="favoritesCount != null">
                #{favoritesCount,jdbcType=INTEGER},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdatedAt != null">
                #{lastUpdatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="isActive != null">
                #{isActive,jdbcType=BIT},
            </if>
            <if test="isDraft != null">
                #{isDraft,jdbcType=BIT},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="selectPostDetailVoById" resultType="com.coderman.club.vo.post.PostDetailVO">
        SELECT
            t1.post_id,
            t1.user_id,
            t1.section_id,
            t1.title,
            t1.views_count,
            t1.likes_count,
            t1.comments_count,
            t1.favorites_count,
            t1.content,
            t1.created_at,
            t1.last_updated_at,
            t2.nickname,
            t3.avatar
        FROM club_post t1
                 LEFT JOIN club_user t2 ON t1.user_id = t2.user_id
                 LEFT JOIN club_user_info t3 ON t2.user_id = t3.user_id
        WHERE t1.is_active = 1 and t1.is_draft = 0  and t1.post_id = #{postId}
    </select>
  <select id="selectUserPostById" resultType="com.coderman.club.model.post.PostModel">
    select
    <include refid="Base_Column_List"></include>
    from club_post where post_id = #{postId} and user_id = #{userId} and is_active = 1
  </select>
  <update id="addViewsCount">
    update club_post set views_count = views_count +1 where post_id = #{postId}
  </update>
  <update id="updatePostWithContentById">
    update club_post
    set
        section_id = #{updateModel.sectionId,jdbcType=BIGINT},
        title = #{updateModel.title,jdbcType=VARCHAR},
        last_updated_at = #{updateModel.lastUpdatedAt,jdbcType=TIMESTAMP},
        is_draft = #{updateModel.isDraft,jdbcType=BIT},
        content = #{updateModel.content,jdbcType=LONGVARCHAR}
    where post_id = #{updateModel.postId,jdbcType=BIGINT}
  </update>
</mapper>