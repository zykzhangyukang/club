<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coderman.club.dao.notification.NotificationDAO">
  <resultMap id="BaseResultMap" type="com.coderman.club.model.notification.NotificationModel">
    <id column="notification_id" jdbcType="BIGINT" property="notificationId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="sender_id" jdbcType="BIGINT" property="senderId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="link" jdbcType="VARCHAR" property="link" />
    <result column="is_read" jdbcType="BIT" property="isRead" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="read_time" jdbcType="TIMESTAMP" property="readTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    notification_id, user_id, sender_id, type, content, link, is_read, create_time, read_time
  </sql>
  <select id="selectByExample" parameterType="com.coderman.club.model.notification.NotificationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from club_notification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from club_notification
    where notification_id = #{notificationId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from club_notification
    where notification_id = #{notificationId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.coderman.club.model.notification.NotificationExample">
    delete from club_notification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.coderman.club.model.notification.NotificationModel">
    insert into club_notification (notification_id, user_id, sender_id, 
      type, content, link, 
      is_read, create_time, read_time
      )
    values (#{notificationId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{senderId,jdbcType=BIGINT}, 
      #{type,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR}, 
      #{isRead,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{readTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.coderman.club.model.notification.NotificationModel">
    insert into club_notification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="notificationId != null">
        notification_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="senderId != null">
        sender_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="link != null">
        link,
      </if>
      <if test="isRead != null">
        is_read,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="readTime != null">
        read_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="notificationId != null">
        #{notificationId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="senderId != null">
        #{senderId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null">
        #{isRead,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readTime != null">
        #{readTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coderman.club.model.notification.NotificationExample" resultType="java.lang.Long">
    select count(*) from club_notification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update club_notification
    <set>
      <if test="record.notificationId != null">
        notification_id = #{record.notificationId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.senderId != null">
        sender_id = #{record.senderId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.link != null">
        link = #{record.link,jdbcType=VARCHAR},
      </if>
      <if test="record.isRead != null">
        is_read = #{record.isRead,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.readTime != null">
        read_time = #{record.readTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update club_notification
    set notification_id = #{record.notificationId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      sender_id = #{record.senderId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      link = #{record.link,jdbcType=VARCHAR},
      is_read = #{record.isRead,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      read_time = #{record.readTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coderman.club.model.notification.NotificationModel">
    update club_notification
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="senderId != null">
        sender_id = #{senderId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null">
        is_read = #{isRead,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readTime != null">
        read_time = #{readTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where notification_id = #{notificationId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coderman.club.model.notification.NotificationModel">
    update club_notification
    set user_id = #{userId,jdbcType=BIGINT},
      sender_id = #{senderId,jdbcType=BIGINT},
      type = #{type,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      link = #{link,jdbcType=VARCHAR},
      is_read = #{isRead,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      read_time = #{readTime,jdbcType=TIMESTAMP}
    where notification_id = #{notificationId,jdbcType=BIGINT}
  </update>
  <select id="getUnReadCount" resultType="com.coderman.club.vo.notification.NotificationCountVO">
    select `type`, count(1) as un_read_count
    from club_notification
    where user_id = #{userId} and is_read = 0
    group by type
  </select>
  <select id="getList" resultType="com.coderman.club.vo.notification.NotificationVO">
     SELECT
      cn.notification_id,
      cn.user_id,
      cn.sender_id,
      cn.type,
      cn.content,
      cn.link,
      cn.is_read,
      cn.create_time,
      cn.read_time,
      cu1.username AS username,
      cui1.avatar AS userAvatar,
      cu2.username AS senderName,
      cui2.avatar AS senderAvatar
      FROM
      club_notification cn
      LEFT JOIN club_user cu1 ON cn.user_id = cu1.user_id
      LEFT JOIN club_user cu2 ON cn.sender_id = cu2.user_id
      LEFT JOIN club_user_info cui1 ON cu1.user_id = cui1.user_id
      LEFT JOIN club_user_info cui2 ON cu2.user_id = cui2.user_id
      WHERE
       cn.user_id = #{userId}
      <if test="type!=null and type!=''">
        and cn.type = #{type}
      </if>
     <if test="isRead!=null">
       and cn.is_read = #{isRead}
     </if>
    ORDER BY
       cn.create_time DESC
  </select>

  <update id="updateReadStatus">
     update club_notification
     set is_read = #{isRead}
    <if test="isRead!=null and isRead==1">
      , read_time =  now()
    </if>
    where notification_id = #{notificationId} and user_id = #{userId}
  </update>
</mapper>