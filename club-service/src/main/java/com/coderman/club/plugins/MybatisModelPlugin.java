package com.coderman.club.plugins;

import com.coderman.club.dao.common.BaseDAO;
import com.coderman.club.model.common.BaseModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
import lombok.EqualsAndHashCode;
import org.apache.commons.lang3.StringUtils;
import org.mybatis.generator.api.IntrospectedColumn;
import org.mybatis.generator.api.IntrospectedTable;
import org.mybatis.generator.api.PluginAdapter;
import org.mybatis.generator.api.dom.java.*;

import java.util.List;

/**
 * @author coderman
 * @Title: mybatis生成model 插件
 * @Description: model 插件
 * @date 2022/5/2322:40
 */
public class MybatisModelPlugin extends PluginAdapter {


    /**
     * 在插件被执行之前被调用，用于验证插件的配置是否正确。
     * @param warnings 参数用于返回验证过程中的警告消息
     * @return
     */
    @Override
    public boolean validate(List<String> warnings) {
        return true;
    }

    public MybatisModelPlugin() {
    }


    /**
     * 用于在生成 Model（实体类）的基础记录类（BaseRecord）时执行自定义逻辑。
     *
     * @param topLevelClass
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean modelBaseRecordClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {

        String tableName = introspectedTable.getFullyQualifiedTableNameAtRuntime();

        // 添加类注释
        topLevelClass.addJavaDocLine("/**");
        topLevelClass.addJavaDocLine(" * This is the base record class for table: " + introspectedTable.getFullyQualifiedTable());
        topLevelClass.addJavaDocLine(" * Generated by MyBatis Generator.");
        topLevelClass.addJavaDocLine(" * @author MyBatis Generator");
        topLevelClass.addJavaDocLine(" */");

        // 公共的Model
        FullyQualifiedJavaType baseJavaType = new FullyQualifiedJavaType(BaseModel.class.getName());

        // 导入包t
        topLevelClass.addImportedType(Data.class.getName());
        topLevelClass.addImportedType(EqualsAndHashCode.class.getName());
        topLevelClass.addImportedType(ApiModel.class.getName());
        topLevelClass.addImportedType(baseJavaType);

        // 添加父类
        topLevelClass.setSuperClass(baseJavaType);

        // 添加注解
        topLevelClass.addAnnotation("@" + EqualsAndHashCode.class.getSimpleName() + "(callSuper = " + Boolean.TRUE + ")");
        topLevelClass.addAnnotation("@" + Data.class.getSimpleName());
        topLevelClass.addAnnotation("@" + ApiModel.class.getSimpleName() + "(value=\"" + topLevelClass.getType().getShortName() + "\", description = \""+tableName+" 实体类\")");

        return true;
    }


    /**
     * 用于在生成 Model（实体类）的字段时执行自定义逻辑。
     *
     * @param field
     * @param topLevelClass
     * @param introspectedColumn
     * @param introspectedTable
     * @param modelClassType
     * @return
     */
    @Override
    public boolean modelFieldGenerated(Field field, TopLevelClass topLevelClass, IntrospectedColumn introspectedColumn, IntrospectedTable introspectedTable, ModelClassType modelClassType) {

        // 当前字段是否为主键
        boolean isPrimary = false;
        List<IntrospectedColumn> primaryKeyColumns = introspectedTable.getPrimaryKeyColumns();
        for (IntrospectedColumn primaryKeyColumn : primaryKeyColumns) {
            if (field.getName().equals(primaryKeyColumn.getJavaProperty())) {
                isPrimary = true;
                break;
            }
        }

        // 导入包
        topLevelClass.addImportedType(ApiModelProperty.class.getName());

        // 获取备注信息
        String remarks = introspectedColumn.getRemarks();
        if (StringUtils.isEmpty(remarks)) {
            remarks = StringUtils.EMPTY;
        }

        field.addAnnotation("@" + ApiModelProperty.class.getSimpleName() + "(value = \"" + remarks + "\")");

        if (isPrimary) {

            // 为主键时添加一行换行
            field.addJavaDocLine(StringUtils.LF);
        }

        return true;
    }

    /**
     * 用于在生成 Mapper 接口（也称为 DAO 接口）时执行自定义逻辑。
     *
     * @param interfaze
     * @param topLevelClass
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean clientGenerated(Interface interfaze, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {

        // 公共DAO
        FullyQualifiedJavaType baseJavaType = new FullyQualifiedJavaType(BaseDAO.class.getName());


        // 泛型类
        FullyQualifiedJavaType recordJavaType = new FullyQualifiedJavaType(introspectedTable.getBaseRecordType());
        FullyQualifiedJavaType exampleJavaType = new FullyQualifiedJavaType(introspectedTable.getExampleType());

        // 导入包
        interfaze.addImportedType(baseJavaType);
        interfaze.addImportedType(recordJavaType);
        interfaze.addImportedType(exampleJavaType);

        // 添加泛型
        FullyQualifiedJavaType argumentJavaType = new FullyQualifiedJavaType(BaseDAO.class.getName());
        argumentJavaType.addTypeArgument(recordJavaType);
        argumentJavaType.addTypeArgument(exampleJavaType);

        // 添加父类接口
        interfaze.addSuperInterface(argumentJavaType);

        return true;
    }


    /**
     * countByExample
     * @param method
     * @param interfaze
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean clientCountByExampleMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
        return false;
    }
    @Override
    public boolean clientCountByExampleMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        return false;
    }

    /**
     * deleteByExample
     * @param method
     * @param interfaze
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean clientDeleteByExampleMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
        return false;
    }
    @Override
    public boolean clientDeleteByExampleMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        return false;
    }

    /**
     * deleteByPrimaryKey
     * @param method
     * @param interfaze
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean clientDeleteByPrimaryKeyMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
        return false;
    }
    @Override
    public boolean clientDeleteByPrimaryKeyMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        return false;
    }

    /**
     * insert
     * @param method
     * @param interfaze
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean clientInsertMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
        return false;
    }
    @Override
    public boolean clientInsertMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        return false;
    }

    /**
     * selectByExampleWithBLOBs
     * @param method
     * @param interfaze
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean clientSelectByExampleWithBLOBsMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
        return false;
    }
    @Override
    public boolean clientSelectByExampleWithBLOBsMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        return false;
    }

    /**
     * selectByExampleWithoutBLOBs
     * @param method
     * @param interfaze
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean clientSelectByExampleWithoutBLOBsMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
        return false;
    }
    @Override
    public boolean clientSelectByExampleWithoutBLOBsMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        return false;
    }

    /**
     * selectByPrimaryKey
     * @param method
     * @param interfaze
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean clientSelectByPrimaryKeyMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
        return false;
    }
    @Override
    public boolean clientSelectByPrimaryKeyMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        return false;
    }

    /**
     * updateByExampleSelective
     * @param method
     * @param interfaze
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean clientUpdateByExampleSelectiveMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
        return false;
    }
    @Override
    public boolean clientUpdateByExampleSelectiveMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        return false;
    }

    /**
     * updateByExampleWithBLOBs
     * @param method
     * @param interfaze
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean clientUpdateByExampleWithBLOBsMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
        return false;
    }
    @Override
    public boolean clientUpdateByExampleWithBLOBsMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        return false;
    }

    /**
     * updateByExampleWithoutBLOBs
     * @param method
     * @param interfaze
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean clientUpdateByExampleWithoutBLOBsMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
        return false;
    }
    @Override
    public boolean clientUpdateByExampleWithoutBLOBsMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        return false;
    }

    /**
     * updateByPrimaryKeySelective
     * @param method
     * @param interfaze
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean clientUpdateByPrimaryKeySelectiveMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
        return false;
    }
    @Override
    public boolean clientUpdateByPrimaryKeySelectiveMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        return false;
    }

    /**
     * updateByPrimaryKeyWithBLOBs
     * @param method
     * @param interfaze
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean clientUpdateByPrimaryKeyWithBLOBsMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
        return false;
    }
    @Override
    public boolean clientUpdateByPrimaryKeyWithBLOBsMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        return false;
    }

    /**
     * updateByPrimaryKeyWithoutBLOBs
     * @param method
     * @param interfaze
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean clientUpdateByPrimaryKeyWithoutBLOBsMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
        return false;
    }
    @Override
    public boolean clientUpdateByPrimaryKeyWithoutBLOBsMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        return false;
    }

    /**
     * insertSelective
     * @param method
     * @param interfaze
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean clientInsertSelectiveMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {
        return false;
    }
    @Override
    public boolean clientInsertSelectiveMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        return false;
    }

    /**
     * 是否生成getter and setter 方法
     * @param method
     * @param topLevelClass
     * @param introspectedColumn
     * @param introspectedTable
     * @param modelClassType
     * @return
     */
    @Override
    public boolean modelGetterMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedColumn introspectedColumn, IntrospectedTable introspectedTable, ModelClassType modelClassType) {
        return false;
    }
    @Override
    public boolean modelSetterMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedColumn introspectedColumn, IntrospectedTable introspectedTable, ModelClassType modelClassType) {
        return false;
    }
}
